@page "/fetchdata"
@inject HttpClient Http
@using Models.ViewModels;

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (K)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ForecastResultVM.DailyWeatherData dailyWeatherData in forecasts.DailyWeather!)
            {
                <tr>
                    <td>@dailyWeatherData.Date.ToShortDateString()</td>
                    <td>@dailyWeatherData.Temperatures.DayCelsius</td>
                    <td>@dailyWeatherData.Temperatures.DayKelvin</td>
                    <td>@dailyWeatherData.WeatherDataEntries!.FirstOrDefault()!.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ForecastResultVM? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<ForecastResultVM>("https://localhost:7209/api/Forecast/Otterup");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
